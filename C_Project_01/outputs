//C program for a Snake & Ladder Game
	
	//Constraints and Rules
	/*
	1.The game will begin with any dice value.
	2.If a 6(six) is appeared then a chance is awarded to that player.
	3.Only the location of current player is shown on the board,
		the location of other player is mentioned below the board.
	4.Snakes:- 49 to  11, 86 to 24, 98 to 78.
	5.Ladder:- 80 to 99, 36 to 57, 9 to 31.
	
	*/
	#include<stdio.h>
	#include<stdlib.h>
	int rd()
	{
		int rem;
		A:rem=rand()%7;
		if(rem==0)
			goto A;
		else
			return rem;
	}
	void displaychart(int curp,char player[4])
	{	int i,j,t,c,sft=0,diceres,pos1,pos2;
		
			
			if(curp==100)
			{
				printf("*****Congratulations*****\n\n\nPlayer %s wins\n",player);
				scanf("%*s");
				exit(0);
			}
		
		for(i=10;i>0;i--)
		{
			t=i-1;
			if((sft%2)==0)
			{
				c=0;
				for(j=10;j>=1;j--)
				{
					diceres=(i*j)+(t*c++);
					
					if(curp==diceres)
						printf("%s\t",player);
					else
					printf("%d\t",diceres);
			
				}
				sft++;
			}
			else
			{
				c=9;
				for(j=1;j<=10;j++)
				{
					diceres=(i*j)+(t*c--);
					
					if(curp==diceres)
						printf("%s\t",player);
					else
						printf("%d\t",diceres);
				}
			
				
				sft++;
			}
			printf("\n\n");
		}
	

		
	

		printf("--------------------------------------------------------------------------\n");
	}
	void main()
	{
		int i,dice,cur_pos1=0,cur_pos2=0;
		char ch;
		while(1)
		{	printf("		** SNAKE AND LADDER GAME** \n		Coded By Talluri Akhil Koushik\n");
			printf("Snakes:- 49 to 11,\t 86 to 24,\t 98 to 78.\nLadder:- 9 to 31,\t 36 to 57,\t 80 to 99.\n");
			printf("Choose your option\n");
			printf("1. Player 1 plays\n");
			printf("2. Player 2 plays\n");
			printf("3. Exit\n");
			scanf("%s",&ch);
		
			switch(ch)
			{
				
				case '1':dice=rd();
				system("cls");
						printf("\t\t\t\tDice = %d\n\n",dice);
						if(dice==6)
						printf("Dice=6: You have earned a chance to play one more time.\n");
						cur_pos1=dice+cur_pos1;
						if(cur_pos1<101){
							if(cur_pos1==98)
							{
							displaychart(78,"$P1$");//snake
							}
							if(cur_pos1==86)
							{
							displaychart(24,"$P1$");//snake
							}
							if(cur_pos1==49)
							{
							displaychart(11,"$P1$");//snake
              }
							if(cur_pos1==80)
							{
							displaychart(99,"$P1$");//ladder
							}
							if(cur_pos1==36)
							{
							displaychart(57,"$P1$");//ladder
							}
							if(cur_pos1==9)
							{
							displaychart(31,"$P1$");//ladder
              }
					    	else{
					    	      displaychart(cur_pos1,"$P1$");
					    	}
						}
						else{
							cur_pos1=cur_pos1-dice;
							printf("Range exceeded of Player 1.\n");
							displaychart(cur_pos1,"$P1$");
						}
						printf("Player 2 position is %d\n",cur_pos2);
				
					break;
				case '2':dice=rd();
				system("cls");
						printf("\t\t\t\tDice = %d\n\n",dice);
						cur_pos2=dice+cur_pos2;
						if(cur_pos2<101){
							if(cur_pos2==98)	//snake
							{
							displaychart(78,"$P2$");
							}
							if(cur_pos2==86)	//snake
							{
							displaychart(24,"$P2$");
							}
							if(cur_pos2==49)	//snake
							{
							displaychart(11,"$P2$");
              }
							if(cur_pos2==80)	//ladder
							{
							displaychart(99,"$P2$");
							}
							if(cur_pos2==36)	//ladder
							{
							displaychart(57,"$P2$");
							}
							if(cur_pos2==9) 	//ladder
							{
							displaychart(31,"$P2$");
              }
						    else{
						          displaychart(cur_pos2,"$P2$");
						    }
						}
						else{
							cur_pos2=cur_pos2-dice;
							printf("Range exceeded of Player 2.\n");
							displaychart(cur_pos2,"$P2$");
						}
						printf("Player 1 position is %d\n",cur_pos1);
					break;
				case '3':exit(0);
					break;
				
				default:printf("Incorrect choice.Try Again\n");
					
			}
			
		}
		
	}
